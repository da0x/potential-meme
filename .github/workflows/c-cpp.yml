name: Build Project

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        architecture: [x64, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up environment
      shell: bash
      run: |
        if [ $RUNNER_OS == "Linux" ]; then
          sudo apt-get update
          if [ ${{ matrix.architecture }} == "x64" ]; then
            sudo apt-get install -y g++
          else
            sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          fi
        elif [ $RUNNER_OS == "macOS" ]; then
          if [ ${{ matrix.architecture }} == "x64" ]; then
            brew install gcc
          else
            brew install llvm
            brew install arm-none-eabi-gcc
            export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
          fi
        fi

    - name: Set up environment (Windows)
      if: runner.os == 'Windows'
      run: |
        if ($Env:RUNNER_ARCH -eq 'X64') {
          choco install mingw
        }

    - name: Build
      shell: bash
      run: |
        if [ $RUNNER_OS == "Linux" ]; then
          if [ ${{ matrix.architecture }} == "x64" ]; then
            g++ -o output main.cpp
          else
            aarch64-linux-gnu-g++ -o output main.cpp
          fi
        elif [ $RUNNER_OS == "macOS" ]; then
          if [ ${{ matrix.architecture }} == "x64" ]; then
            g++ -o output main.cpp
          else
            arm-none-eabi-g++ -o output main.cpp
          fi
        fi

    - name: Build (Windows)
      if: runner.os == 'Windows'
      run: g++ -o output main.cpp
